/*
 * RecMod
 * Master build file
 * Based on TConstruct's master build file
 * Authors: Sunstrike, ProgWML6, fuj1n
 * Help from AbrarSyed
 */

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = 'ForgeFS'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

repositories {
    mavenLocal()
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = 'run/'
    replace '${version}', config.mod_version
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#			stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = config.mappings_version
}


sourceSets {
    main {
        resources {
            srcDir 'resources'
        }
        java {
            srcDir 'src'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", config.mod_version
    inputs.property "MCversion", config.minecraft_version

    // replace stuff in mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and MCversion
        expand 'version': config.mod_version, 'MCversion': config.minecraft_version
    }

    // copy everything else
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// Add Coremod Manifest
jar {
    manifest {
        attributes 'FMLAT': 'RecMod_at.cfg'
    }
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes 'FMLAT': 'RecMod_at.cfg'
    }
}

artifacts {
    archives deobfJar
}